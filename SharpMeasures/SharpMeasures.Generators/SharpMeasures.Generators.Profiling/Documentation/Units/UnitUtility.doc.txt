# Utility: true

# ReferenceToUnit
<see cref="#NameOfUnit/#"/>
/#

# ReferenceToQuantity
<see cref="Quantities.#NameOfQuantity/#"/>
/#

# Quantity
<summary>The #ReferenceToQuantity/# that the #ReferenceToUnit/# represents.</summary>
/#

# Constructor
<summary>Constructs a new #ReferenceToUnit/#, representing the #ReferenceToQuantity# <paramref name="#ParameterNameOfQuantity/#"/>.</summary>
<param name="#ParameterNameOfQuantity/#">The #ReferenceToQuantity/# that the new #ReferenceToUnit/# represents.</param>
/#

# ScaledBy_Scalar
<summary>Derives a new #ReferenceToUnit/# from this instance, through scaling by <paramref name="scale"/>.</summary>
<param name="scale">The original #ReferenceToUnit/# is scaled by this value, to produce a new #ReferenceToUnit/#.</param>
/#

# ScaledBy_Double
#ScaledBy_Scalar/#
/#

# WithPrefix_Metric
<summary>Derives a new #ReferenceToUnit/# from this instance, by prefixing the <see cref="MetricPrefix"/> <paramref name="prefix"/>.</summary>
<param name="prefix">The <see cref="MetricPrefix"/> with which the new #ReferenceToUnit/# is expressed.</param>
<remarks>Any <see cref="MetricPrefix"/> or <see cref="BinaryPrefix"/> applied to the original instance will be retained, essentially stacking the prefixes.</remarks>
/#

# WithPrefix_Binary
<summary>Derives a new #ReferenceToUnit/# from this instance, by prefixing the <see cref="BinaryPrefix"/> <paramref name="prefix"/>.</summary>
<param name="prefix">The <see cref="BinaryPrefix"/> with which the new #ReferenceToUnit/# is expressed.</param>
<remarks>Any <see cref="BinaryPrefix"/> or <see cref="MetricPrefix"/> applied to the original instance will be retained, essentially stacking the prefixes.</remarks>
/#

# ToString
<summary>Produces a formatted string constisting of the type followed by the represented #ReferenceToQuantity/#.</summary>
/#

# CompareTo_SameType
<inheritdoc/>
/#

# Operator_LessThan_SameType
<summary>Determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
less than that of <paramref name="y"/>.</summary>
<param name="x">The operator determines whether the #ReferenceToQuantity/# represented by this #ReferenceToUnit/# is
less than that of <paramref name="y"/>.</param>
<param name="y">The operator determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
less than that of this #ReferenceToUnit/#.</param>
/#

# Operator_GreaterThan_SameType
<summary>Determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
greater than that of <paramref name="y"/>.</summary>
<param name="x">The operator determines whether the #ReferenceToQuantity/# represented by this #ReferenceToUnit/# is
greater than that of <paramref name="y"/>.</param>
<param name="y">The operator determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
greater than that of this #ReferenceToUnit/#.</param>
/#

# Operator_LessThanOrEqual_SameType
<summary>Determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
less than or equal to that of <paramref name="y"/>.</summary>
<param name="x">The operator determines whether the #ReferenceToQuantity/# represented by this #ReferenceToUnit/# is
less than or equal to that of <paramref name="y"/>.</param>
<param name="y">The operator determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
less than or equal to that of this #ReferenceToUnit/#.</param>
/#

# Operator_GreaterThanOrEqual_SameType
<summary>Determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
greater than or equal to that of <paramref name="y"/>.</summary>
<param name="x">The operator determines whether the #ReferenceToQuantity/# represented by this #ReferenceToUnit/# is
greater than or equal to that of <paramref name="y"/>.</param>
<param name="y">The operator determines whether the #ReferenceToQuantity/# represented by <paramref name="x"/> is
greater than or equal to that of this #ReferenceToUnit/#.</param>
/#