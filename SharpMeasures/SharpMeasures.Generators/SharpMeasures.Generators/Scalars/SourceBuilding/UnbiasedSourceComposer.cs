namespace SharpMeasures.Generators.Scalars.SourceBuilding;

using SharpMeasures.Generators.Utility;

using System.Text;
using System.Threading;

internal static class UnbiasedSourceComposer
{
    public static string Compose(Pipeline.Unbiased.SeventhStage.Result data, CancellationToken token)
    {
        string typeName = data.TypeSymbol.Name;

        StringBuilder source = new();

        SourceBuildingUtility.AppendAutoGeneratedHeader(source);
        SourceBuildingUtility.AppendNullableDirective(source);

        SourceBuildingUtility.AppendNamespace(source, data.TypeSymbol);

        SourceBuildingUtility.AppendUsings(source, data.TypeSymbol, new string[]
        {
            "SharpMeasures"
        });

        SourceBuildingUtility.AppendTypeDefinition(source, data.TypeSymbol);

        SourceBuildingUtility.AppendInterfaceImplementation(source, InterfaceLister.GetAll(data.TypeSymbol, data.PowerOperations));

        SourceBuildingUtility.AppendBlock(source, typeBlock, indentLevel: 0);

        void typeBlock(StringBuilder source, string indentation)
        {
            ConstantsComposer.Append(source, data, token);

            source.Append($"{indentation}public double {data.Parameters.MagnitudePropertyName} {{ get; init; }}");
        }

        return source.ToString();
    }

    
}
