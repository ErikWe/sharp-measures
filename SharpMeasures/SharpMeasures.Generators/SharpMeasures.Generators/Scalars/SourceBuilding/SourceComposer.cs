namespace SharpMeasures.Generators.Scalars.SourceBuilding;

using SharpMeasures.Generators.Scalars.Pipeline;
using SharpMeasures.Generators.SourceBuilding;

using System.Text;
using System.Threading;

internal static class SourceComposer
{
    public static string Compose(FifthStage.Result data, CancellationToken token)
    {
        string quantityName = data.TypeDefinition.Name.Name;

        StringBuilder source = new();

        StaticBuilding.AppendAutoGeneratedHeader(source);
        StaticBuilding.AppendNullableDirective(source);

        NamespaceBuilding.AppendNamespace(source, data.TypeDefinition.Name.NameSpace);

        source.Append(data.TypeDefinition.ComposeDeclaration());

        InterfaceBuilding.AppendInterfaceImplementation(source, InterfaceLister.GetAll(data));

        BlockBuilding.AppendBlock(source, typeBlock, originalIndentationLevel: 0);

        void typeBlock(StringBuilder source, Indentation indentation)
        {
            BasesComposer.Append(source, indentation, data, token);

            source.Append($"{indentation}public double {data.Settings.MagnitudePropertyName} {{ get; init; }} // TODO: Should this be init-able?");
        }

        return source.ToString();
    }

    
}
