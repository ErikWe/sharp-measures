#nullable enable

namespace ErikWe.SharpMeasures.Tests.Cases.QuantityTests.#Quantity#Tests;

using ErikWe.SharpMeasures.Quantities;
using ErikWe.SharpMeasures.Tests.Datasets;

using Xunit;

public class MathPowersTests
{
#Invert#
    [Theory]
    [ClassData(typeof(#Quantity#Dataset))]
    public void Invert(#Quantity# quantity)
    {
        Utility.QuantityTests.MathPowersTests.Invert_ShouldMatchDefinition(quantity, quantity.Invert());
    }
#/Invert#

#Square#
    [Theory]
    [ClassData(typeof(#Quantity#Dataset))]
    public void Square(#Quantity# quantity)
    {
        Utility.QuantityTests.MathPowersTests.Square_ShouldMatchPower2(quantity, quantity.Square());
    }
#/Square#

#Cube#
    [Theory]
    [ClassData(typeof(#Quantity#Dataset))]
    public void Cube(#Quantity# quantity)
    {
        Utility.QuantityTests.MathPowersTests.Cube_ShouldMatchPower3(quantity, quantity.Cube());
    }
#/Cube#

#SquareRoot#
    [Theory]
    [ClassData(typeof(#Quantity#Dataset))]
    public void SquareRoot(#Quantity# quantity)
    {
        Utility.QuantityTests.MathPowersTests.SquareRoot_ShouldMatchSystem(quantity, quantity.SquareRoot());
    }
#/SquareRoot#

#CubeRoot#
    [Theory]
    [ClassData(typeof(#Quantity#Dataset))]
    public void CubeRoot(#Quantity# quantity)
    {
        Utility.QuantityTests.MathPowersTests.CubeRoot_ShouldMatchSystem(quantity, quantity.CubeRoot());
    }
#/CubeRoot#
}
