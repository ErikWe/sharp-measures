#nullable enable

namespace ErikWe.SharpMeasures.Tests.Cases.QuantityTests.#Quantity##Dimensionality#Tests;

using ErikWe.SharpMeasures.Quantities;
using ErikWe.SharpMeasures.Tests.Datasets;

using Xunit;

public class TransformTests
{
    [Theory]
    [ClassData(typeof(#Quantity##Dimensionality#Dataset))]
    public void Transform_Identity_ShouldBeUnmodified(#Quantity##Dimensionality# quantity)
    {
        Utility.QuantityTests.TransformTests.Identity_ShouldBeUnaltered(quantity);
    }

    [Theory]
    [ClassData(typeof(GenericDataset<#Quantity##Dimensionality#Dataset, Vector#Dimensionality#Dataset>))]
    public static void Translation_ShouldBeOffsetComponentwise(#Quantity##Dimensionality# quantity, Vector#Dimensionality# translation)
    {
        Utility.QuantityTests.TransformTests.Translation_ShouldBeOffsetByBComponentwise(quantity, translation);
    }

    [Theory]
    [ClassData(typeof(GenericDataset<#Quantity##Dimensionality#Dataset, Vector#Dimensionality#Dataset>))]
    public static void Scaling_ShouldBeScaledComponentwise(#Quantity##Dimensionality# quantity, Vector#Dimensionality# scale)
    {
        Utility.QuantityTests.TransformTests.Scaling_ShouldBeScaledByBComponentwise(quantity, scale);
    }
}
