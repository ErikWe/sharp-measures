#Define:HeaderSummary(quantity, dimensionality, component, unitName, singularBases, pluralUnits)
/// <para>
/// New instances of <see cref="#Param:quantity#"/> can be constructed by multiplying a <see cref="#Param:component#"/> with a <see cref="Vector#Param:dimensionality#"/> or #Document:DoubleTuple(#Param:dimensionality#)#.
/// Instances can also be produced by combining other quantities, either through mathematical operators or using overloads of the static method 'From'. This is demonstrated below:
/// <list type="bullet">
/// <item>
/// <code><see cref="#Param:quantity#"/> a = #Document:TupleExample(dimensionality = #Param:dimensionality#)# * <see cref="#Param:component#.One#Param:singularBases[%0]#"/>;</code>
/// </item>
/// <item>
/// <code>#Document:ExampleDerivedMethod(quantity = #Param:quantity#, dimensionality = #Param:dimensionality#, variable = d)# </code>
/// </item>
/// </list>
/// The magnitude of the components can be retrieved in the desired <see cref="#Param:unitName#"/> using pre-defined properties, such as <see cref="#Param:pluralUnits[%0]#"/>.
/// </para>
#/

#Define:HeaderSummaryAssociated(quantity, dimensionality, component, unitName, singularBases, pluralUnits)
/// <para>
/// New instances of <see cref="#Param:quantity#"/> can be constructed by multiplying a <see cref="#Param:component#"/> with a Vector#Param:dimensionality# or #Document:DoubleTuple(#Param:dimensionality#)#.
/// Instances can also be produced by combining other quantities, either through mathematical operators or using overloads of the static method 'From'.
/// Lastly, instances can be constructed from quantities sharing the same unit, using instance-methods of the associated quantity - typically prefixed with 'As'. This is demonstrated below:
/// <list type="bullet">
/// <item>
/// <code><see cref="#Param:quantity#"/> a = #Document:TupleExample(dimensionality = #Param:dimensionality#)# * <see cref="#Param:component#.One#Param:singularBases[%0]#"/>;</code>
/// </item>
/// <item>
/// <code>#Document:ExampleDerivedMethod(quantity = #Param:quantity#, dimensionality = #Param:dimensionality#, variable = d)# </code>
/// </item>
/// <item>
/// <code>#Document:ExampleFromAssociated(quantity = #Param:quantity#, dimensionality = #Param:dimensionality#, variable = e)#</code>
/// </item>
/// </list>
/// The magnitude of the components can be retrieved in the desired <see cref="#Param:unitName#"/> using pre-defined properties, such as <see cref="#Param:pluralUnits[%0]#"/>./// </para>
#/

#Define:TupleExample(dimensionality)
#Document:TupleExample#Param:dimensionality##
#/

#Define:TupleExample3#
(3, 5, 7)
#/

#Define:LowerCaseText(number)
#Document:LowerCaseText#Param:number##
#/

#Define:LowerCaseText3#
three
#/

#Define:DoubleTuple(dimensionality)
#Document:DoubleTuple#Param:dimensionality##
#/

#Define:DoubleTuple3
(double, double, double)
#/