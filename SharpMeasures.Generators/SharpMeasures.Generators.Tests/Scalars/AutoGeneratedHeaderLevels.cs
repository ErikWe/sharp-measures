namespace SharpMeasures.Generators.Tests.Scalars;

using Microsoft.CodeAnalysis.Diagnostics;

using SharpMeasures.Generators.DriverUtility;
using SharpMeasures.Generators.Tests.Verify;

using System.Collections.Immutable;
using System.Threading.Tasks;

using VerifyXunit;

using Xunit;

[UsesVerify]
public class AutoGeneratedHeaderLevels
{
    [Fact]
    public Task LevelNegative() => Verify("-1");

    [Fact]
    public Task Level0() => Verify("0");

    [Fact]
    public Task Level1() => Verify("1");

    private static Task Verify(string level) => GeneratorVerifier.Construct<SharpMeasuresGenerator>(Text, Configuration(level)).AssertNoDiagnosticsReported().VerifyMatchingSourceNames("Length.Common.g.cs");

    private static string Text => """
        using SharpMeasures.Generators;

        [ScalarQuantity(typeof(UnitOfLength))]
        public partial class Length { }

        [Unit(typeof(Length))]
        public partial class UnitOfLength { }
        """;

    private static DriverConstructionConfiguration Configuration(string level)
    {
        var builder = ImmutableDictionary.CreateBuilder<string, string>();

        builder.Add("SharpMeasures_GeneratedFileHeaderLevel", level);

        AnalyzerConfigOptionsProvider provider = new CustomAnalyzerConfigOptionsProvider(new CustomAnalyzerConfigOptions(builder.ToImmutable()));

        return DriverConstructionConfiguration.Empty with { OptionsProvider = provider };
    }
}
